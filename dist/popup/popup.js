(()=>{class e{constructor(){this.bindEvents(),this.getDictionaryStats()}bindEvents(){document.getElementById("convertBtn").addEventListener("click",()=>this.convertText()),document.getElementById("convertFromBtn").addEventListener("click",()=>this.convertFromWingdings()),document.getElementById("convertPageBtn").addEventListener("click",()=>this.sendMessageToContentScript({type:"CONVERT_PAGE_REQUEST"})),document.getElementById("revertPageBtn").addEventListener("click",()=>this.sendMessageToContentScript({type:"REVERT_PAGE_REQUEST"})),document.getElementById("dictionaryBtn").addEventListener("click",()=>this.openSidePanel()),document.getElementById("mappingBtn").addEventListener("click",()=>this.openMappingTable()),document.getElementById("helpLink").addEventListener("click",()=>chrome.tabs.create({url:chrome.runtime.getURL("assets/help.html")})),document.getElementById("aboutLink").addEventListener("click",()=>chrome.tabs.create({url:chrome.runtime.getURL("assets/about.html")}));const e=document.getElementById("inputText"),t=document.getElementById("charCount");e.addEventListener("input",()=>{const n=e.value.length;t.textContent=n,t.classList.toggle("warning",n>600)})}async getDictionaryStats(){const e=document.getElementById("dictStats");try{const t=await chrome.runtime.sendMessage({type:"GET_STATISTICS"});if(t&&t.success){const n=t.statistics;e.innerHTML=`\n          <div class="stat-item">\n            <span class="stat-label">登録単語数:</span>\n            <span class="stat-value">${n.totalWords}</span>\n          </div>\n          <div class="stat-item">\n            <span class="stat-label">ストレージ使用率:</span>\n            <span class="stat-value ${n.storageUsage>80?"warning":""}">${n.storageUsage}%</span>\n          </div>\n        `}else e.textContent="統計の取得に失敗しました。"}catch(t){console.error("Error getting dictionary stats:",t),e.textContent="エラーが発生しました。"}}async openSidePanel(){try{await chrome.sidePanel.open({windowId:(await chrome.windows.getCurrent()).id})}catch(e){console.error("Error opening side panel:",e)}}async openMappingTable(){await chrome.tabs.create({url:chrome.runtime.getURL("assets/mapping-table.html")})}async convertText(){const e=document.getElementById("inputText").value.trim();if(!e)return;const t=await this.sendMessageToContentScript({type:"CONVERT_TEXT",text:e});t&&t.success&&(document.getElementById("resultText").textContent=t.convertedText,document.getElementById("resultSection").style.display="block")}async convertFromWingdings(){const e=document.getElementById("wingdingsInput").value.trim();if(!e)return;const t=await this.sendMessageToContentScript({type:"CONVERT_FROM_WINGDINGS",text:e});t&&t.success&&(document.getElementById("reverseResultText").textContent=t.convertedText,document.getElementById("reverseResultSection").style.display="block")}async sendMessageToContentScript(e){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(t&&t.id)return await chrome.tabs.sendMessage(t.id,e)}catch(e){console.error("Could not send message to content script:",e)}}}document.addEventListener("DOMContentLoaded",()=>new e)})();