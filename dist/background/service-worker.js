(()=>{var e={894:e=>{e.exports={DictionaryManager:class{constructor(){this.STORAGE_KEY="wingdings_dictionary",this.MAX_ENTRIES=5e3,this.MAX_STORAGE_SIZE=97280,this.cache=new Map}async init(){const e=await chrome.storage.sync.get(this.STORAGE_KEY);this.dictionary=e[this.STORAGE_KEY]||{words:{},settings:{autoConvert:!1,showUnknownWords:!0,romajiStyle:"hepburn"},metadata:{version:"1.0",lastUpdate:Date.now(),entryCount:0}},this.buildCache()}buildCache(){this.cache.clear(),Object.entries(this.dictionary.words).forEach(([e,t])=>{this.cache.set(e,t)})}async addWord(e,t,a=null){if(Object.keys(this.dictionary.words).length>=this.MAX_ENTRIES)throw new Error(`Dictionary limit reached: ${this.MAX_ENTRIES} words`);if(!a)throw new Error("Romaji is required to add a word.");const s={reading:t,romaji:a,frequency:1,lastUsed:Date.now(),dateAdded:Date.now()};return this.dictionary.words[e]?(this.dictionary.words[e].frequency++,this.dictionary.words[e].lastUsed=Date.now()):(this.dictionary.words[e]=s,this.dictionary.metadata.entryCount++),this.dictionary.metadata.lastUpdate=Date.now(),this.cache.set(e,s),await this.save(),s}async removeWord(e){return!!this.dictionary.words[e]&&(delete this.dictionary.words[e],this.cache.delete(e),this.dictionary.metadata.entryCount--,this.dictionary.metadata.lastUpdate=Date.now(),await this.save(),!0)}getWord(e){return this.cache.get(e)||null}async searchWords(e,t=50){const a=[],s=e.toLowerCase();for(const[i,r]of this.cache.entries()){if(a.length>=t)break;(i.includes(e)||r.reading.includes(e)||r.romaji.toLowerCase().includes(s))&&a.push({kanji:i,...r,relevance:this.calculateRelevance(e,i,r)})}return a.sort((e,t)=>t.relevance-e.relevance),a}calculateRelevance(e,t,a){let s=0;t===e&&(s+=100),a.reading===e&&(s+=90),a.romaji===e.toLowerCase()&&(s+=80),t.startsWith(e)&&(s+=50),a.reading.startsWith(e)&&(s+=40),a.romaji.startsWith(e.toLowerCase())&&(s+=30),s+=Math.min(a.frequency,50);const i=(Date.now()-a.lastUsed)/864e5;return s+=Math.max(0,30-i),s}async save(){const e=JSON.stringify(this.dictionary),t=new Blob([e]).size;t>this.MAX_STORAGE_SIZE&&await this.cleanup(),await chrome.storage.sync.set({[this.STORAGE_KEY]:this.dictionary}),console.log(`Dictionary saved: ${this.dictionary.metadata.entryCount} words, ${t} bytes`)}async cleanup(){const e=Object.entries(this.dictionary.words).map(([e,t])=>({kanji:e,data:t,score:t.frequency+Math.max(0,30-(Date.now()-t.lastUsed)/864e5)}));e.sort((e,t)=>e.score-t.score);const t=e.slice(0,Math.floor(.25*e.length));t.forEach(e=>{delete this.dictionary.words[e.kanji],this.cache.delete(e.kanji)}),this.dictionary.metadata.entryCount=Object.keys(this.dictionary.words).length,console.log(`Cleaned up ${t.length} words from dictionary`)}async exportDictionary(){const e={...this.dictionary,exportDate:Date.now(),version:chrome.runtime.getManifest().version};return new Blob([JSON.stringify(e,null,2)],{type:"application/json"})}async importDictionary(e){try{const t=JSON.parse(e);if(!t.words||"object"!=typeof t.words)throw new Error("Invalid dictionary format");const a=await this.showImportDialog(Object.keys(t.words).length);return"replace"===a?this.dictionary.words=t.words:"merge"===a&&Object.assign(this.dictionary.words,t.words),this.dictionary.metadata.entryCount=Object.keys(this.dictionary.words).length,this.dictionary.metadata.lastUpdate=Date.now(),this.buildCache(),await this.save(),{success:!0,imported:Object.keys(t.words).length,total:this.dictionary.metadata.entryCount}}catch(e){return console.error("Import failed:",e),{success:!1,error:e.message}}}getStatistics(){const e=Object.values(this.dictionary.words),t=Date.now();return{totalWords:e.length,averageFrequency:e.reduce((e,t)=>e+t.frequency,0)/e.length,mostUsedWord:e.reduce((e,t)=>t.frequency>e.frequency?t:e,e[0]),recentlyAdded:e.filter(e=>t-e.dateAdded<6048e5).length,storageUsage:Math.round(new Blob([JSON.stringify(this.dictionary)]).size/this.MAX_STORAGE_SIZE*100),lastUpdate:new Date(this.dictionary.metadata.lastUpdate).toLocaleString()}}}}}},t={};function a(s){var i=t[s];if(void 0!==i)return i.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,a),r.exports}(()=>{const{DictionaryManager:e}=a(894),t=new class{constructor(){this.dictionaryManager=new e,this.init()}async init(){await this.dictionaryManager.init(),this.setupContextMenus(),this.setupMessageHandlers(),this.setupTabHandlers()}setupContextMenus(){chrome.contextMenus.removeAll(()=>{chrome.contextMenus.create({id:"wingdings-convert-page",title:" ページ全体をWingdingsに変換",contexts:["page"]}),chrome.contextMenus.create({id:"REVERT_PAGE_REQUEST",title:"↩️ 元に戻す",contexts:["page"]}),chrome.contextMenus.create({id:"CONVERT_SELECTION_FROM_WINGDINGS",title:"選択範囲をテキストに変換",contexts:["selection"]}),chrome.contextMenus.create({id:"wingdings-add-word",title:'➕ 選択文字を辞書に登録 "%s"',contexts:["selection"]}),chrome.contextMenus.create({id:"wingdings-show-mapping",title:" Wingdings対応表を表示",contexts:["page"]})})}setupMessageHandlers(){chrome.runtime.onMessage.addListener((e,t,a)=>(this.handleMessage(e,t,a),!0))}async handleMessage(e,t,a){try{const s=e.tabId||t.tab?.id;switch(e.type){case"CONVERT_PAGE":await this.convertPage(s),a({success:!0});break;case"REVERT_PAGE":await this.revertPage(s),a({success:!0});break;case"ADD_TO_DICTIONARY":a({success:!0,data:await this.dictionaryManager.addWord(e.kanji,e.reading,e.romaji)});break;case"SEARCH_DICTIONARY":a({success:!0,results:await this.dictionaryManager.searchWords(e.query,e.limit||50)});break;case"REMOVE_FROM_DICTIONARY":a({success:await this.dictionaryManager.removeWord(e.kanji)});break;case"GET_STATISTICS":a({success:!0,statistics:this.dictionaryManager.getStatistics()});break;case"EXPORT_DICTIONARY":const t=await this.dictionaryManager.exportDictionary(),i=URL.createObjectURL(t);await chrome.downloads.download({url:i,filename:`wingdings-dictionary-${Date.now()}.json`,saveAs:!0}),a({success:!0});break;case"PLAY_SOUND":this.playGasterSound(e.soundId),a({success:!0});break;default:a({success:!1,error:"Unknown message type"})}}catch(e){console.error("Message handling error:",e),a({success:!1,error:e.message})}}setupTabHandlers(){chrome.tabs.onUpdated.addListener(async(e,t,a)=>{if("complete"===t.status&&a.url&&!a.url.startsWith("chrome://"))try{await chrome.tabs.sendMessage(e,{type:"PAGE_LOADED",url:a.url})}catch(t){console.log("Content script not ready for tab:",e)}}),chrome.tabs.onActivated.addListener(async e=>{await this.updateBadge(e.tabId)})}async convertPage(e){await chrome.tabs.sendMessage(e,{type:"CONVERT_PAGE_REQUEST"}),await this.updateBadge(e,"ON")}async revertPage(e){await chrome.tabs.sendMessage(e,{type:"REVERT_PAGE_REQUEST"}),await this.updateBadge(e,"")}async updateBadge(e,t=""){await chrome.action.setBadgeText({tabId:e,text:t}),await chrome.action.setBadgeBackgroundColor({tabId:e,color:"ON"===t?"#4CAF50":"#FF9800"})}playGasterSound(e="gaster1"){const t=new Audio(chrome.runtime.getURL(`assets/sounds/${e}.mp3`));t.volume=.3,t.play().catch(e=>{console.log("Sound play failed:",e)})}};chrome.contextMenus.onClicked.addListener(async(e,a)=>{switch(e.menuItemId){case"wingdings-convert-page":await t.convertPage(a.id);break;case"wingdings-revert-page":await t.revertPage(a.id);break;case"wingdings-add-word":e.selectionText&&await chrome.tabs.sendMessage(a.id,{type:"SHOW_WORD_REGISTRATION",selectedText:e.selectionText.trim()});break;case"wingdings-show-mapping":await chrome.tabs.create({url:chrome.runtime.getURL("assets/mapping-table.html")})}})})()})();