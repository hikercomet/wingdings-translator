const c=new Map;chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"translateToWingdings",title:"Translate selection to Wingdings",contexts:["selection"]}),chrome.contextMenus.create({id:"separator1",type:"separator",contexts:["page"]}),chrome.contextMenus.create({id:"translatePage",title:"Translate this page to Wingdings",contexts:["page"]}),chrome.contextMenus.create({id:"revertPage",title:"Revert page translation",contexts:["page"]})});chrome.contextMenus.onClicked.addListener((n,t)=>{if(console.log("Context menu clicked:",n.menuItemId),!t||!t.id||!t.url||t.url.startsWith("chrome://")){console.log("Invalid tab or URL, not executing script.");return}const s=t.id;let e=null;switch(n.menuItemId){case"translateToWingdings":n.selectionText&&console.log("Selected text:",n.selectionText);break;case"translatePage":console.log("Executing translatePage in content script for tabId:",s),e={action:"translatePage"};break;case"revertPage":console.log("Executing revertPage in content script for tabId:",s),e={action:"revertPage"};break}e&&(c.set(s,e),chrome.scripting.executeScript({target:{tabId:s},files:["content.js"],injectImmediately:!0,type:"module"}).catch(o=>console.error("Error injecting content script:",o)))});chrome.runtime.onMessage.addListener((n,t,s)=>{if(n.type==="contentScriptReady"&&t.tab&&t.tab.id){const e=t.tab.id;if(console.log(`Content script ready for tabId: ${e}`),c.has(e)){const o=c.get(e);c.delete(e),console.log(`Sending pending message to tabId ${e}:`,o),chrome.tabs.sendMessage(e,o).then(()=>{console.log("Message sent successfully.")}).catch(r=>{console.error("Error sending message to content script:",r)})}}return!0});
